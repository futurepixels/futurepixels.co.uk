<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Futurepixels</title>
    <link>http://futurepixels.co.uk/posts/index.xml</link>
    <description>Recent content in Posts on Futurepixels</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-GB</language>
    <lastBuildDate>Fri, 04 Nov 2016 10:00:00 +0000</lastBuildDate>
    <atom:link href="http://futurepixels.co.uk/posts/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Making a career in programming is hard, enough to kill it</title>
      <link>http://futurepixels.co.uk/posts/making-a-career-in-programming-is-hard-enough-to-kill-it/</link>
      <pubDate>Fri, 04 Nov 2016 10:00:00 +0000</pubDate>
      
      <guid>http://futurepixels.co.uk/posts/making-a-career-in-programming-is-hard-enough-to-kill-it/</guid>
      <description>

&lt;h3 id=&#34;tl-dr&#34;&gt;tl;dr&lt;/h3&gt;

&lt;p&gt;People are shit at being people.&lt;/p&gt;

&lt;h3 id=&#34;what&#34;&gt;What?&lt;/h3&gt;

&lt;p&gt;Since I started becoming a developer, I have struggled in such a way that I thought I was alone in working with people who are unprofessional by being a bully or just damn right pig headed. I&amp;rsquo;ve wrote a few articles on this, &lt;a href=&#34;http://futurepixels.co.uk/experience/coming-of-age-as-a-php-developer&#34;&gt;Coming of age as a PHP developer&lt;/a&gt; and then &lt;a href=&#34;http://futurepixels.co.uk/experience/being-a-professional-developer&#34;&gt;Being a professional developer&lt;/a&gt;. I have also presented a talk to two local user groups about this exact issue, which was great and had more outcome on the conversations and questions afterwards than I thought it would.&lt;/p&gt;

&lt;p&gt;In my current time of seven years being a developer, I have had five placements as a php developer. My first was a junior role; it is not until looking back that I realise the state of the development industry and what was to come.&lt;/p&gt;

&lt;h3 id=&#34;looking-back&#34;&gt;Looking back&amp;hellip;&lt;/h3&gt;

&lt;p&gt;In all my roles, one of the later ones were the hardest. I was a senior PHP developer in a very small team (4 people). We were rewriting the current site to implement object orientated code.&lt;/p&gt;

&lt;p&gt;The code wasn&amp;rsquo;t the issue, it was the behavior more than anything. I, as some/most developers I know, suffer with impostor &lt;a href=&#34;https://en.wikipedia.org/wiki/Impostor_syndrome&#34;&gt;syndrome&lt;/a&gt;. I enjoy learning but as there is so much to learn about programming, the languages, devops, sys admin, sys ops, methodologies, best practice, design patterns and so on.&lt;/p&gt;

&lt;p&gt;I didn&amp;rsquo;t go to university, so I have had to learn a lot from scratch. Now, this does not make me a unique case as there are many developers who started as bedroom programmers. In the year and a half I was in this role I learned a massive lesson; university is not the making of a good programmer.&lt;/p&gt;

&lt;p&gt;I had been ridiculed when I made mistakes on spellings, looked at like I was stupid when I didn&amp;rsquo;t know about something or how something worked and I was constantly put down and my opinion was not valued/trusted by people above me due to not having a higher education.&lt;/p&gt;

&lt;p&gt;After a while, I did what any respectable person would do; I took to writing a Twitter poll.&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;After a recent conversation, I am interested in thoughts of people within the tech industry on thier education&lt;/p&gt;&amp;mdash; var_dump( (@NigelGreenway) &lt;a href=&#34;https://twitter.com/NigelGreenway/status/773487213451632640&#34;&gt;September 7, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;I was interested to see the results come through and was surprised by the winning option due to recent conversations. General conversations within the industry via various messaging platforms seemed to point to the fact it does not matter. University does not make you a developer, but it can prepare you for what is to come. As long as that developer can teach, learn and adopt a good manner in doing so then the knowledge will just sit behind them qualities.&lt;/p&gt;

&lt;h3 id=&#34;it-s-the-attitude-that-counts&#34;&gt;It&amp;rsquo;s the attitude that counts&lt;/h3&gt;

&lt;p&gt;Not being a very confident person in programming, and other parts of life, I try to listen to &lt;a href=&#34;https://twitter.com/NigelGreenway/lists/coding-coyote/members&#34;&gt;people&lt;/a&gt; and take things away to learn, whether career related or not.&lt;/p&gt;

&lt;p&gt;I have started to attend conference&amp;rsquo;s, local user groups, online communities, write a blog, contribute to open source and read as much as I can, when I can. Pushing boundaries both personally and mentally. I don&amp;rsquo;t believe in the &amp;ldquo;wrong way&amp;rdquo; or &amp;ldquo;better way&amp;rdquo; of doing something, but in encouraging and discussing options/opinions on a resolution/feature/problem.&lt;/p&gt;

&lt;p&gt;In my placements of work over the past few years I have had to learn to deal with people who are rude and are arrogant as well as elitist and think their education makes them more important. As a developer we are constantly learning. As a developer we &lt;strong&gt;must&lt;/strong&gt; have the ability to learn from people, male or female, older or younger, university attendees and non university attendees.&lt;/p&gt;

&lt;p&gt;It has been hard to handle people who deem themselves smarter and know more than everyone else due to education or what ever else and the truth is that our industry is full of people who are paid a lot of money and are incompetent but get by due to team members picking up the slack and doing good work, but are the type of person who like to be more dominant and take the piss out of others due to their own insecurities. Attitudes like this caused me to not trust my instincts on my approaches, to not feel confident in my skills, to make me feel stupid when I didn&amp;rsquo;t understand something when I was shown/told or read about something, in 2 places I was ready to hand my development career back and do something else.&lt;/p&gt;

&lt;p&gt;In most of my placements it was people that made me want to leave. Not the work and not the business (at least not directly).&lt;/p&gt;

&lt;h3 id=&#34;moving-forward&#34;&gt;Moving forward&lt;/h3&gt;

&lt;p&gt;This stress/state of doubt lead me to get involved with the community more and it was here that I started to realise the problem.&lt;/p&gt;

&lt;p&gt;Before I say this, this is not me simply blaming other people, but; the problem was people.&lt;/p&gt;

&lt;p&gt;I am a person who will listen to people, not because I think they are always right, but because if you talk about something, you are doing so by describing you experience with that &amp;ldquo;something&amp;rdquo;. It is all relative experience. I can learn from it whether it is simply learning about this &amp;ldquo;something&amp;rdquo; existing or that someone had &amp;ldquo;x&amp;rdquo; experience with this &amp;ldquo;something&amp;rdquo;. Doesn&amp;rsquo;t matter if they were wrong or right to me because that should not matter. If you can take something away from it and progress your learning on &amp;ldquo;x&amp;rdquo; then it has helped you as a developer and you can use that somewhere.&lt;/p&gt;

&lt;p&gt;When I joined communities I did not know what to expect, lets be honest; a room full of tech loving people are generally introverts and are afraid to speak to strangers. I first joined &lt;a href=&#34;https://twitter.com/phpwarks&#34;&gt;PHPWarks&lt;/a&gt; and arrived on my own not knowing what to expect. It was scary, like shit scary, but I pushed myself as I thought as a 32 year old I should be able to walk into a room without feeling like it was my first day at a new school.&lt;/p&gt;

&lt;p&gt;Close to 2 years on, I am glad I did. Since then I have made some great friends and found a great place to work through open source and getting involved with the community. It is here that I had the best support I could ever have. My wife has been great but hearing me whine about work every day for a year plus can become very grating, especially when she has now experience or what I am going through. And let&amp;rsquo;s be honest, it is just my version of the story. I could have aggravated the situation, gone against authority and just not liked the outcome? Every story has 2 sides.&lt;/p&gt;

&lt;h3 id=&#34;stop-rambling-please&#34;&gt;Stop rambling, please!&lt;/h3&gt;

&lt;p&gt;Over the year I become very aware that I was becoming very negative. Please don&amp;rsquo;t underestimate how negative I was getting. Every chance I got to let people know my problems I used to do so. Every meetup, every IRC or slack conversation, Twitter and every conference I attended I started.&lt;/p&gt;

&lt;p&gt;I did not like myself. (I don&amp;rsquo;t think my wife and friends liked me much either to be honest)&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s hard though for me to work with difficult people. I am someone who like to fix problems. Improve on processes. Help others. I understand a business is there to make money, but a business is built on processes, rules, systems and above all people.&lt;/p&gt;

&lt;p&gt;When you work with people who put you down, disagree with you because they just don&amp;rsquo;t think you are of any value, it can be very degrading. Mix this with people thinking that they are better than you and it can become very frustrating.&lt;/p&gt;

&lt;p&gt;When you are being ridiculed because you made a mistake, but there is no process in place to help reduce that mistake it can be very frustrating. Being battled against by people who are deemed &amp;ldquo;smarter&amp;rdquo; than me when I try to implement testing, a framework or looking at updating the infrastructure architecture to help with implementing a good release pipeline, this can be very frustrating.&lt;/p&gt;

&lt;p&gt;However, talking with people in the community and asking for advice on this issues has helped me so much. The support I was receiving throughout this time was great and the people who helped will never realise how much they did, just by listening and offering help where required.&lt;/p&gt;

&lt;h3 id=&#34;toc_6&#34;&gt;&amp;hellip;&lt;/h3&gt;

&lt;p&gt;It doesn&amp;rsquo;t matter how you got to where you are now, as both a developer and a person. The important thing to remember is that you were not born with the knowledge and experiences you have now, you picked things up, you learned new things and you succeeded in parts and failed in others. Don&amp;rsquo;t get frustrated/annoyed/impatient when someone asks you a &amp;ldquo;stupid&amp;rdquo; question as there is no such thing in the context of learning. Don&amp;rsquo;t laugh at someones work with colleagues over that persons shoulder. You were there once, maybe not scared to ask questions but I&amp;rsquo;m sure there was a level of intimidation.&lt;/p&gt;

&lt;p&gt;Don&amp;rsquo;t think you have the &amp;ldquo;right&amp;rdquo; or &amp;ldquo;best&amp;rdquo; answer to everything. Listen to others because it could help refine that answer.&lt;/p&gt;

&lt;p&gt;For me, the day I realised I had to leave was the day I took my problems home and shouted at my 3 year old daughter because she wanted me to play a game with her and she had to ask several times. I have never felt so shit as a dad and a human.&lt;/p&gt;

&lt;p&gt;The place before that was when I did not like going into work, I am not that kind of person. I enjoy going to work. I enjoy being part of the business mechanics and making a difference where I can.&lt;/p&gt;

&lt;p&gt;If you are going through this, then get in touch with me via &lt;a href=&#34;https://twitter.com/NigelGreenway&#34; target=&#34;_blank&#34;&gt;Twitter&lt;/a&gt; or reach out to a community, or maybe look at moving jobs if possible? There is a solution somewhere, but don&amp;rsquo;t suffer. It is not worth it. You are at your day job and with these &amp;ldquo;people&amp;rdquo; more than you are with your loved ones.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Saving seconds with an ssh config file</title>
      <link>http://futurepixels.co.uk/posts/saving-seconds-with-an-ssh-config-file/</link>
      <pubDate>Tue, 13 Sep 2016 10:00:00 +0000</pubDate>
      
      <guid>http://futurepixels.co.uk/posts/saving-seconds-with-an-ssh-config-file/</guid>
      <description>

&lt;h3 id=&#34;the-problem&#34;&gt;The problem&lt;/h3&gt;

&lt;p&gt;There is nothing more time consuming than typing:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;→ ssh &amp;lt;user&amp;gt;@&amp;lt;ip-address/hostname&amp;gt;
&amp;lt;user&amp;gt;@&amp;lt;ip-address/hostname&amp;gt;&#39;s password:
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;- or -&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;→ ssh -i /some/path/to/my/ssh/key &amp;lt;user&amp;gt;@&amp;lt;ip-address/hostname&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Seriously, do this multiple times a day, with the added annoyance of entering long server hostname&amp;rsquo;s like &lt;code&gt;btables@lower.low.some-env.dept-name.my-company.co.uk&lt;/code&gt; along with passwords incorrectly entered (and done so in multiple time&amp;rsquo;s). That, as well as logging into the wrong server can cause lost time and on them rare occasions, headaches caused by working on the wrong server. It happens. It&amp;rsquo;s not something just done by junior sys admins. When you are under stress or just simply not concentrating on what you are doing, you will make mistakes.&lt;/p&gt;

&lt;h3 id=&#34;a-solution&#34;&gt;A solution&lt;/h3&gt;

&lt;p&gt;The solution for this, creating an SSH configuration file. This allows a one place storage for your connections.&lt;/p&gt;

&lt;p&gt;A simple configuration that will ask for a password will look like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;Host staging
	Hostname lower.low.some-env.dept-name.my-company.co.uk
	User     btables
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now it will be as simple as&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;→ ssh staging
btables@lower.low.some-env.dept-name.my-company.co.uk&#39;s password:
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The even simpler way to do so is to actually use an SSH key. The best information on setting up an SSH key is over at &lt;a href=&#34;https://help.github.com/articles/connecting-to-github-with-ssh/&#34; target=&#34;_new&#34;&gt;Github.com&lt;/a&gt;. There are major benefits to this, the two main ones are that it is more secure than just using a password and if an employee is dismissed/leaves or a laptop/desktop/mobile device is stolen, then you can simply remove the SSH key from the &lt;code&gt;authorized_keys&lt;/code&gt; file with ease. Generate a bash or provisioning script and you can update multiple servers within seconds.&lt;/p&gt;

&lt;p&gt;For this, your configuration file will look like:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;Host staging
	Hostname     lower.low.some-env.dept-name.my-company.co.uk
	User         btables
	IdentityFile ~/.ssh/company_key
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now, run the same command and you will just get the server console, no password:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;→ ssh staging
btables@server-name:~$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As with anything in devops, it&amp;rsquo;s the little things that allow you to be more efficient and enjoy work that little bit more&amp;hellip;&lt;/p&gt;

&lt;h3 id=&#34;edited&#34;&gt;Edited:&lt;/h3&gt;

&lt;p&gt;On Wednesday, 14th September 2016&lt;/p&gt;

&lt;p&gt;For the added security, you can use the following configuration:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;Host *
	ForwardAgent   no
	IdentitiesOnly yes
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This forces the ssh session to only use the given &lt;code&gt;IdentityFile&lt;/code&gt;. From the docs:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Specifies that ssh(1) should only use the authentication identity files configured in the ssh_config files, even if ssh-agent(1) offers more identities. The argument to this keyword must be &amp;ldquo;yes&amp;rdquo; or &amp;ldquo;no&amp;rdquo;. This option is intended for situations where ssh-agent offers many different identities. The default is &amp;ldquo;no&amp;rdquo;.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Installing an ISO to a USB stick</title>
      <link>http://futurepixels.co.uk/posts/installing-an-iso-to-a-usb-stick/</link>
      <pubDate>Mon, 12 Sep 2016 10:00:00 +0000</pubDate>
      
      <guid>http://futurepixels.co.uk/posts/installing-an-iso-to-a-usb-stick/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;I am working from Linux, please submit a pull request to add instructions for Windows/Mac&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;First thing is first, download the iso you want to use as a live disk.&lt;/p&gt;

&lt;p&gt;To install to a usb stick, you run &lt;code&gt;sudo dd if=/location/of/the.iso of=/dev/X&lt;/code&gt;, where &lt;code&gt;x&lt;/code&gt; is the USB stick. To find the device you want to install, before inserting the stick run &lt;code&gt;[sudo] fdisk -l&lt;/code&gt;. You should be given the following:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;→ sudo fdisk -l

Disk /dev/sda: 119.2 GiB, 128035676160 bytes, 250069680 sectors
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 4096 bytes
I/O size (minimum/optimal): 4096 bytes / 4096 bytes
Disklabel type: gpt
Disk identifier: xxxxx-xxxxx-xxxxx-xxxxx-xxxxx

Device        Start       End   Sectors  Size Type
/dev/sda1      2048  58593279  58591232   28G Linux filesystem
/dev/sda2  58593280  58597375      4096    2M BIOS boot
/dev/sda3  74217472 250068991 175851520 83.9G Linux filesystem
/dev/sda4  58597376  74217471  15620096  7.5G Linux swap

Partition table entries are not in disk order.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You are looking for the line &lt;code&gt;Disk /dev/xxx: x.xGiB ...&lt;/code&gt;. Take note of what is already there&amp;hellip;&lt;/p&gt;

&lt;p&gt;Now, insert your USB stick and run &lt;code&gt;[sudo] fdisk -l&lt;/code&gt; again and you should get an extra addition. In my example above, I originally had &lt;code&gt;/dev/sda&lt;/code&gt; which is my laptop HDD. After inserting the disk (below), I now have &lt;code&gt;/dev/sda&lt;/code&gt; and &lt;code&gt;/dev/sdb&lt;/code&gt;. I now have&lt;code&gt;sdb&lt;/code&gt; which is my USB stick.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;→ sudo fdisk -l

Disk /dev/sda: 119.2 GiB, 128035676160 bytes, 250069680 sectors
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 4096 bytes
I/O size (minimum/optimal): 4096 bytes / 4096 bytes
Disklabel type: gpt
Disk identifier: xxxxx-xxxxx-xxxxx-xxxxx-xxxxx

Device        Start       End   Sectors  Size Type
/dev/sda1      2048  58593279  58591232   28G Linux filesystem
/dev/sda2  58593280  58597375      4096    2M BIOS boot
/dev/sda3  74217472 250068991 175851520 83.9G Linux filesystem
/dev/sda4  58597376  74217471  15620096  7.5G Linux swap

Partition table entries are not in disk order.
Disk /dev/sdb: 29.8 GiB, 32010928128 bytes, 62521344 sectors
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disklabel type: gpt
Disk identifier: xxxxx-xxxxx-xxxxx-xxxxx-xxxxx

Device     Start      End  Sectors  Size Type
/dev/sdb1   2048 62519295 62517248 29.8G Linux filesystem
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I can now install my ISO to my usb stick via &lt;code&gt;[sudo] dd if=/home/&amp;lt;username&amp;gt;/Downloads/some-live-disk.iso of=/dev/sdb&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;→ sudo dd if=/home/nigel/Downloads/rancheros.iso of=/dev/sdb
83968+0 records in
83968+0 records out
42991616 bytes (43 MB) copied, 9.68235 s, 4.4 MB/s
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can now see above that the ISO has been copied above. You should now be able to insert onto you server/laptop/desktop and boot directly for that USB stick. Great for testing a new Linux distrubution outside of a virtual machine.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ sudo fdisk -l
Disk /dev/sda: 298.1 GiB, 320072933376 bytes, 625142448 sectors
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disklabel type: dos
Disk identifier: 0x5bbb7b73

Device Boot Start End Sectors Size Id Type
/dev/sda1 * 2048 625142447 625140400 298.1G 83 Linux
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Above, it shows I have a disk that is /dev/sda. I now want to delete this partition. There are two ways of doing this; via command line or a graphical display.&lt;/p&gt;

&lt;p&gt;To do via a graphical display, simply create a live CD/DVD/USB linux disc (think Ubuntu/ElementaryOS live disc) and fire up &lt;a href=&#34;http://gparted.org/&#34; target=&#34;_blank&#34;&gt;GParted&lt;/a&gt; and format the disk.&lt;/p&gt;

&lt;p&gt;To do via the command line, I use fdisk.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ sudo fdisk /dev/sda
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Rewriting your git history</title>
      <link>http://futurepixels.co.uk/posts/rewriting-your-git-history/</link>
      <pubDate>Tue, 06 Sep 2016 10:00:00 +0000</pubDate>
      
      <guid>http://futurepixels.co.uk/posts/rewriting-your-git-history/</guid>
      <description>

&lt;h3 id=&#34;editing-the-latest-commit&#34;&gt;Editing the latest commit:&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;
The following tip is about changing previous commits. If these commits are pushed to the remote, I would strongly advise to not mess with your history as it could break stuff&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Pretty easy to do so as stated on the &lt;a href=&#34;https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#Changing-the-Last-Commit&#34;&gt;git scm book#Changing the last commit&lt;/a&gt;. But a quick overview shows the simplicity:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git commit --amend &amp;quot;Your new message&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;editing-a-commit-earlier-in-your-commit-history&#34;&gt;Editing a commit earlier in your commit history&lt;/h3&gt;

&lt;p&gt;That is great for the last commit message you just created, but what about a message type of reword that is after your latest commit message.&lt;/p&gt;

&lt;p&gt;I have an alias set up in my git config, &lt;code&gt;ci = commit -m&lt;/code&gt;. This allows me to do the following:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git ci &amp;quot;Just done something&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This comes with it&amp;rsquo;s problems though, sometimes I commit stuff like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git ci &amp;quot;Add `someMethod` to add some business value&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Run a &lt;a href=&#34;https://github.com/NigelGreenway/dotfiles/blob/prod/.gitconfig#L45&#34;&gt;&lt;code&gt;git lg&lt;/code&gt;&lt;/a&gt; and you would see the following:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git lg
* n18e676d - (HEAD, master) Add  to add some business value (5 seconds ago)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;There is a part missing from the commit message that is important for the context of the commit and allows an overview without having to look further into it, the &lt;code&gt;someMethod&lt;/code&gt; part. The issue (incase you didn&amp;rsquo;t spot it; I didn&amp;rsquo;t escape the backtick (`)). Easy enough to change as it was the last commit, so &lt;code&gt;git commit --amend&lt;/code&gt; and show the log again:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git lg
* 62h8sy22 - (HEAD, master) Add `someMethod` to add some business value (3 seconds ago)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Notice that the commit hash has changed from the &lt;code&gt;n18e676d&lt;/code&gt; to &lt;code&gt;62h8sy22&lt;/code&gt;.
Remember, this should only be done &lt;em&gt;before&lt;/em&gt; pushing your changes to the remote repository&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Now, imagine I committed this a few commits ago:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git lg
* ch379a63 - (HEAD, your-branch) Fix #3: Popup displayed off center (7 minutes ago)
* j82s56gh - Add new popup styling (10 minutes ago)
* 18sg7dbp - Reduce body marging (1 hour ago)
* n18e676d - Add  to add some business value (1 hour ago)
* 71gv177w - Fix #28: Correct log timestamp (4 hours ago)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now, I have &lt;strong&gt;not pushed my local changes&lt;/strong&gt; to the remote repository so I can amend that commit, but this time I will require &lt;a href=&#34;https://git-scm.com/docs/git-rebase&#34;&gt;rebase&lt;/a&gt; to help me.&lt;/p&gt;

&lt;p&gt;I need to perform an interactive rebase, but this should be done by passing the commit hash &lt;em&gt;previous&lt;/em&gt; to the one I wish to edit. In this case it will be the hash &lt;code&gt;71gv177w&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You will only be able to do this with a branch that has a remote that it can rebase from&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git rebase -i 71gv177w
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will take you to your &lt;code&gt;$EDITOR&lt;/code&gt; where you can start to modify your commit message. You will be presented with a series of steps.&lt;/p&gt;

&lt;p&gt;Step one, select the commit you want to amend and use &lt;code&gt;reword&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;1 pick ch379a63 Fix #3: Popup displayed off center
2 pick j82s56gh Add new popup styling
3 pick 18sg7dbp Reduce body marging
4 reword n18e676d Add  to add some business value
5 pick 71gv177w Fix #28: Correct log timestamp
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Step two, modify the content of your commit, save and exit your editor.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Add `someMethod` to add some business value
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Run &lt;a href=&#34;https://github.com/NigelGreenway/dotfiles/blob/prod/.gitconfig#L45&#34;&gt;git lg&lt;/a&gt; and you will see the new modified git message:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git lg
* ch379a63 - (HEAD, your-branch) Fix #3: Popup displayed off center (7 minutes ago)
* j82s56gh - Add new popup styling (10 minutes ago)
* 18sg7dbp - Reduce body marging (1 hour ago)
* n18e676d - Add `someMethod` to add some business value (5 seconds ago)
* 71gv177w - Fix #28: Correct log timestamp (4 hours ago)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;

&lt;p&gt;This is a great way to modify commit messages where you find a typo or a badly structured comment in your history that you have not pushed to the remote repository.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Thank you to all the people that have helped me</title>
      <link>http://futurepixels.co.uk/posts/thank-you-to-all-the-people-that-have-helped-me/</link>
      <pubDate>Fri, 15 Jan 2016 10:00:00 +0000</pubDate>
      
      <guid>http://futurepixels.co.uk/posts/thank-you-to-all-the-people-that-have-helped-me/</guid>
      <description>

&lt;h1 id=&#34;thank-you&#34;&gt;Thank you&lt;/h1&gt;

&lt;p&gt;This is simply a thank you to people, who have got me to where I am today, and are part of the PHP, HTML, CSS and other communities.&lt;/p&gt;

&lt;p&gt;It is basically a list that would take a fair few tweets to do, so I wanted it in one place.&lt;/p&gt;

&lt;p&gt;So, thank you to all the people at PHP Warwickshire and PHP East Midlands as they were the people who have encouraged me to do talks and helped with my initial confidence and my general progression/sanity as a developer.&lt;/p&gt;

&lt;p&gt;I also want to thank the following people for helping. Whether it was time spent over IRC/Slack/Twitter/Email or even just writing a blog post that I have read or doing a project that has helped me to extend my knowledge.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Matt Brunt&lt;/li&gt;
&lt;li&gt;Luke Steadweb&lt;/li&gt;
&lt;li&gt;Ben Plummer&lt;/li&gt;
&lt;li&gt;Mike Preston&lt;/li&gt;
&lt;li&gt;Stefan Koopmanschap&lt;/li&gt;
&lt;li&gt;Anthony Ferrara&lt;/li&gt;
&lt;li&gt;Phil Sturgeon&lt;/li&gt;
&lt;li&gt;Sara Goleman&lt;/li&gt;
&lt;li&gt;James Titcumb&lt;/li&gt;
&lt;li&gt;Cal Evans&lt;/li&gt;
&lt;li&gt;Stuart Herbert&lt;/li&gt;
&lt;li&gt;Mark McDonnell&lt;/li&gt;
&lt;li&gt;Josh Lockhart&lt;/li&gt;
&lt;li&gt;Erika Heidi&lt;/li&gt;
&lt;li&gt;Harry Roberts&lt;/li&gt;
&lt;li&gt;Rob Allen&lt;/li&gt;
&lt;li&gt;Andrew Smith&lt;/li&gt;
&lt;li&gt;Jeremy Coates&lt;/li&gt;
&lt;li&gt;Lorna Jane Mitchell&lt;/li&gt;
&lt;li&gt;Ciaran McNulty&lt;/li&gt;
&lt;li&gt;Mathias Verraes&lt;/li&gt;
&lt;li&gt;Konstantin Kudryashov&lt;/li&gt;
&lt;li&gt;David Walsh&lt;/li&gt;
&lt;li&gt;Igor Wiedler&lt;/li&gt;
&lt;li&gt;Andrea Faulds&lt;/li&gt;
&lt;li&gt;The people at PHPSC15, PHPNW15 and Symfony Live 2015&lt;/li&gt;
&lt;li&gt;All the people on php.security, phpmentor and slimphp&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I am looking forward to 2016 and hope to contribute back with talks and getting involved with more open source projects.&lt;/p&gt;

&lt;p&gt;Again, thank you.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Migrating from Mac OS to Linux</title>
      <link>http://futurepixels.co.uk/posts/migrating-from-mac-os-to-linux/</link>
      <pubDate>Thu, 14 Jan 2016 10:00:00 +0000</pubDate>
      
      <guid>http://futurepixels.co.uk/posts/migrating-from-mac-os-to-linux/</guid>
      <description>

&lt;h1 id=&#34;preface&#34;&gt;Preface&lt;/h1&gt;

&lt;p&gt;I have now been a Mac OS user for around 8 years now. Don&amp;rsquo;t get me wrong, I have enjoyed using it. However, I have recently wanted to change for two reasons.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The first;&lt;/em&gt; I want to advance on my skills as a developer/devops, so I feel like using a pure Linux operating system will help with that in regards to being familiar with the OS, structure, kernel and so on&amp;hellip;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Second;&lt;/em&gt; I am not liking the direction of Apple, both in terms of [mainly] cost and that I think iOS is going to heavily influence the design of the desktop.&lt;/p&gt;

&lt;p&gt;This is a simple migration log/experience from moving to Mac OS to Linux, Elementary OS.&lt;/p&gt;

&lt;h1 id=&#34;the-move&#34;&gt;The move&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;It terms of migrating from Mac OS to Linux OS, it is just the OS that I am changing and not the hardware, yet.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;At the start of 2015, I was looking at trying Linux. My first flavour I tried was Fedora. I lasted around 3 days due to a few issues with things like WiFi and audio, and as a dad, my time to myself precious. With this, I went back to Mac OS and thought it was going to be more trouble than it was worth.&lt;/p&gt;

&lt;p&gt;Come summer time, I was getting the itch again for moving away from Mac OS. So, I went with what seemed the common flavour; Ubuntu. This was better in terms of set up, it was a lot easier but it did come with its problems. WiFi once again played up due to some driver issues, but I managed to get that sorted. One of the main issues I was facing this time round was key bindings. It sounds silly as I sit here and write about the issue, but &lt;code&gt;ctrl&lt;/code&gt; replacing &lt;code&gt;cmd&lt;/code&gt;, the key short cuts for other parts of the OS like &lt;code&gt;cmd&lt;/code&gt;+&lt;code&gt;n&lt;/code&gt; for opening a new window in Finder or every programming having the standard &lt;code&gt;cmd&lt;/code&gt;+&lt;code&gt;,&lt;/code&gt; for the program preferences panel are all very useful. Other parts like the Unity search being a mess when coming from being so used to the simplicity, tidiness and ease of spotlight when searching across the file system was a struggle too, along with default applications like the address book and so on.&lt;/p&gt;

&lt;p&gt;Once again, this made me switch back to Mac OS. Yes, I know you can install the software to help things like this but at the time it was a bit annoying and again I had not really thought it through about how hard it would be to transition from one environment to another.&lt;/p&gt;

&lt;h1 id=&#34;the-actual-move&#34;&gt;The actual move&lt;/h1&gt;

&lt;p&gt;So, a few weeks before Christmas 2015, I once again got the urge try Linux.&lt;/p&gt;

&lt;p&gt;The last time I failed with Ubuntu, &lt;a href=&#34;https://twitter.com/philipobenito&#34;&gt;Phil Bennett&lt;/a&gt; suggested using &lt;a href=&#34;https://elementary.io/&#34;&gt;ElementaryOS&lt;/a&gt; (see &lt;a href=&#34;https://twitter.com/philipobenito/status/646052457194389505&#34;&gt;this tweet&lt;/a&gt;). Previous to this suggestion I had heard about &lt;a href=&#34;https://elementary.io/&#34;&gt;ElementaryOS&lt;/a&gt; and had a brief look into it, but at the time I was still trying Ubuntu and decide to give up.&lt;/p&gt;

&lt;p&gt;So, this time round I tried &lt;a href=&#34;https://elementary.io/&#34;&gt;ElementaryOS&lt;/a&gt; and within a week of dual booting I used Mac OS for all of 2 hours tops. The transition was pleasant and easy.&lt;/p&gt;

&lt;h2 id=&#34;the-inner-parts&#34;&gt;The inner parts&lt;/h2&gt;

&lt;h3 id=&#34;s-spotlight-s-slingshot&#34;&gt;&lt;s&gt;Spotlight&lt;/s&gt; Slingshot&lt;/h3&gt;

&lt;p&gt;Now, one of the things I have really enjoyed (and miss) about Spotlight is the fact that it can search across pretty much anything. In ElementaryOS, Slingshot does not search across files within your Documents directory and so on, only &lt;code&gt;.desktop&lt;/code&gt; files which are mapping files to an application. There are alternatives like &lt;a href=&#34;https://launchpad.net/synapse-project&#34;&gt;the synapse launcher&lt;/a&gt;, &lt;a href=&#34;https://github.com/ManuelSchneid3r/albert&#34;&gt;albert&lt;/a&gt; and &lt;a href=&#34;https://github.com/ffnord/alfred-debian&#34;&gt;alfred for debian&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Slingshot works well for application search, although I do miss things like document search and so on.&lt;/p&gt;

&lt;p&gt;I have come to rely on the spotlight feature of Mac OS when it comes to searching for docs, applications and contacts without having to always open the application, sling . The other thing it can do, which is a great thing, is calculations. It&amp;rsquo;s great to hit &lt;code&gt;cmd&lt;/code&gt;+&lt;code&gt;space&lt;/code&gt; and then type in &lt;code&gt;(2+4)*(1+1)&lt;/code&gt; and it returns the answer. It has helped more than I thought it would. This is mainly because my maths is terrible, although not as bad as my handwriting, but it is still terrible. When I tried &lt;a href=&#34;https://elementary.io/&#34;&gt;Elementary OS&lt;/a&gt; this was my first test, as it was with the other flavours before, check that I can do calculations, &lt;em&gt;it is the small things&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;For this reason, I have gone with &lt;a href=&#34;https://launchpad.net/synapse-project&#34;&gt;the synapse launcher&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;s-slingshot-s-synapse&#34;&gt;&lt;s&gt;Slingshot&lt;/s&gt; Synapse&lt;/h3&gt;

&lt;p&gt;To use Synapse Launcher, install via the following:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo su&lt;/code&gt;
&lt;code&gt;apt-get install -y synapse&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;I have gone one step further and disabled the keyboard shortcut for the slingshot launcher via &lt;code&gt;settings&lt;/code&gt; -&amp;gt; &lt;code&gt;keyboard&lt;/code&gt; -&amp;gt; &lt;code&gt;shortcuts&lt;/code&gt; -&amp;gt; &lt;code&gt;Applications&lt;/code&gt; and in the right panel, simply click on the &lt;code&gt;Applications Launcher&lt;/code&gt; and press delete. Then, open &lt;code&gt;synapse&lt;/code&gt; and in the top right (in the indicator bar), right click and select preferences. This will bring up a dialogue, in the &lt;strong&gt;shortcuts&lt;/strong&gt; section, click the shortcut input for &lt;strong&gt;Activate&lt;/strong&gt; and replace it with &lt;code&gt;cmd&lt;/code&gt;+&lt;code&gt;space&lt;/code&gt;. Synapse will now be your default search tool for the OS.&lt;/p&gt;

&lt;h3 id=&#34;design&#34;&gt;Design&lt;/h3&gt;

&lt;p&gt;The one thing I have become to enjoy with Mac OS is the simple and plain design on the UI along with its key bindings and so on. ElementaryOS has been designed very, very well, which has helped the transition I am sure. Not much more I can say about that, without repeating myself.&lt;/p&gt;

&lt;h3 id=&#34;my-issues&#34;&gt;My issues&lt;/h3&gt;

&lt;p&gt;I have found a few issues, but nothing that can&amp;rsquo;t be &lt;s&gt;ignored&lt;/s&gt; fixed.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I have found Slingshot can fail, but the fix is more than simple: &lt;code&gt;killall slingshot&lt;/code&gt;. (this has been negated so far by using synapse)&lt;/li&gt;
&lt;li&gt;Wingpanel can take a few minutes to start up at time&lt;/li&gt;
&lt;li&gt;When using full screen in an application, you are able to have multiple applications for that screen. If you have an application in full screen along with another non full screen application, wingpanel (the indicator bar) is also shown with a transparent background.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Apart from the list above, I have found it a pleasant experience, hence why I have stayed.&lt;/p&gt;

&lt;h3 id=&#34;thoughts&#34;&gt;Thoughts&lt;/h3&gt;

&lt;p&gt;So far I have been really impressed with what the team of ElementaryOS have done. Part of me wants to move up the family tree to Debian, but I think that will be a while yet. I have been using ElementaryOS since a week before Christmas 2015 and I have even stopped using Mac OS at work and I am just working off my MacBook Pro. Even further than that, I have been looking replacing my MacBook Pro with a non Apple device. Baby steps first though&amp;hellip;&lt;/p&gt;

&lt;p&gt;Things like multiple screens for displays are also good, was a bit frustrating at first as only the primary screen can be used for multiple screens and any other added display only has one screen. I have learnt to use this to my advantage. For instance, I will have my secondary monitor for PHPStorm (or main application for the moment) and my laptop display for any other application that is in full screen. This way I can switch between email, Slack, Chrome, Terminal and so on on my laptop display whilst still having my main application in focus (when I say focus, I mean I can use &lt;code&gt;cmd&lt;/code&gt;+&lt;code&gt;left key/right key&lt;/code&gt; to switch between screens on my laptop, but, to use the app in the screen I have selected I must &lt;code&gt;alt&lt;/code&gt;+&lt;code&gt;tab&lt;/code&gt; to that app).&lt;/p&gt;

&lt;p&gt;For a Mac OS user, it is hard to do the switch from one OS to another, and for many reasons. In terms of style and simplicity, and lets be honest; Mac OS is the fisher price of operating systems, I would recommend ElementaryOS for anyone thinking of switching from Mac OS, whatever their reason be.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Being a professional developer</title>
      <link>http://futurepixels.co.uk/posts/being-a-professional-developer/</link>
      <pubDate>Tue, 25 Aug 2015 10:00:00 +0000</pubDate>
      
      <guid>http://futurepixels.co.uk/posts/being-a-professional-developer/</guid>
      <description>

&lt;p&gt;This is something I touched on briefly in my last post, &amp;lsquo;&lt;a href=&#34;http://futurepixels.co.uk/experience/coming-of-age-as-a-php-developer/#from-junior-to-now&#34;&gt;Coming of age as a php developer&lt;/a&gt;&amp;rsquo;, but it is something I would like to extend on.&lt;/p&gt;

&lt;h3 id=&#34;what-do-people-expect-from-a-developer&#34;&gt;What do people expect from a developer?&lt;/h3&gt;

&lt;p&gt;Every one has a different view of what to expect from a developer. Me, personally, I expect to be able to approach another developer and gain knowledge from them as well as be able to ask questions or suggest a possible solution to a problem without being treated like I suggested setting up a production server and allowing everyone to use &lt;code&gt;root&lt;/code&gt; as the login user.&lt;/p&gt;

&lt;p&gt;Something I enjoyed at both my first (as a junior) and third (as a developer) role, was the ability to discuss and extend on ideas and sometimes get something we can build.&lt;/p&gt;

&lt;h3 id=&#34;ok-so-what-is-a-professional-developer&#34;&gt;Ok, so what is a professional developer?&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Work with the community. When it fails, don&amp;rsquo;t get disgusted at the failure; get involved and help solve the problem.
&lt;small&gt;Cal Evans (&lt;a href=&#34;https://twitter.com/calevans&#34;&gt;@calevans&lt;/a&gt;)&lt;/small&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;What &lt;a href=&#34;https://twitter.com/calevans&#34;&gt;Cal Evans&lt;/a&gt; says above is so true, but I believe this is not just for communities, but for businesses too. Recently, I have realised that I come across in a way that makes it look like I want my own way all the time. This is not true in any form. The way I work is I see a problem or an inefficiency and want to improve it, for both me and the business. At the current and previous place of work I successfully got &lt;a href=&#34;http://redmine.org&#34;&gt;Redmine&lt;/a&gt; implemented for the business.&lt;/p&gt;

&lt;p&gt;At one place it replaced &lt;a href=&#34;https://guides.github.com/features/issues/&#34;&gt;Github Issues&lt;/a&gt;, but &lt;a href=&#34;http://redmine.org&#34;&gt;Redmine&lt;/a&gt; was then replaced with &lt;a href=&#34;https://jira.atlassian.com&#34;&gt;JIRA&lt;/a&gt; and &lt;a href=&#34;https://confluence.atlassian.com&#34;&gt;Confluence&lt;/a&gt; (which I miss).&lt;/p&gt;

&lt;p&gt;At the current place it replaced &lt;a href=&#34;https://trello.com/&#34;&gt;Trello&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Don&amp;rsquo;t get me wrong the original tools did the job, but I had experience with &lt;a href=&#34;http://redmine.org&#34;&gt;Redmine&lt;/a&gt; and so showed it to who it concerned and it was accepted both times. There is a feel good factor about having something accepted. But then there is the other side to this. The part where ideas get thrown to the ground like you are stupid and then trampled on. This hurts, and I am ok to admit that, but it is not the rejection that hurts.&lt;/p&gt;

&lt;p&gt;An idea is organic, no matter how crap or small it seems, if you roll with it and discuss the pros and cons the chances are the person who was the creator of the idea will see the flaw, if there is one or be able to explain further in their thoughts for the idea. It is the lack of discussion that hurts. Repeat this a fair few times, in a short period and I will curl up like a hedgehog and not ask questions or give help towards problem solving.&lt;/p&gt;

&lt;p&gt;This is &lt;strong&gt;not&lt;/strong&gt; a professional environment to work in for both the team and the business. This is &lt;strong&gt;not&lt;/strong&gt; how a professional developer should act. I have started a quest to become a professional in my line of work, but my job history says different. I recently spoke to Cal Evans in regards to my concerns at &lt;a href=&#34;phpsouthcoast.co.uk&#34;&gt;PHP South Coast&lt;/a&gt; 2015, it was short but gave me what I needed; advice from someone with experience with managing. I don&amp;rsquo;t think he will know how much that helped me, but I have come to learn a fair bit more about my self, so cheers Cal.&lt;/p&gt;

&lt;h3 id=&#34;what-is-a-professional&#34;&gt;What is a professional?&lt;/h3&gt;

&lt;p&gt;Professional (as stated in &lt;a href=&#34;https://en.wikipedia.org/wiki/Professional&#34;&gt;Wikipedia&lt;/a&gt;):&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A professional is a member of a profession or any person who earns their living from a specified activity.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In then states:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In narrow usage, not all expertise is considered a profession. Although sometimes incorrectly referred to as professions, occupations such as skilled construction and maintenance work are more generally thought of as trades or crafts. The completion of an apprenticeship is generally associated with skilled labour, or trades such as carpenter, electrician, mason, painter, plumber and other similar occupations. A related distinction would be that a professional does mainly mental work, as opposed to engaging in physical work.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So, where does that leave us? Well, we do mental work, so we have the right to use the term &amp;ldquo;professional&amp;rdquo;, but we are also a skilled trade?&lt;/p&gt;

&lt;p&gt;We can agree that we &lt;em&gt;can&lt;/em&gt; be professional developers. But in my mind, that does not give us (or anyone else) the right to use the term &amp;ldquo;professional&amp;rdquo;. There is one [major] part that defines what a professional is.&lt;/p&gt;

&lt;p&gt;I spoke to others about their interpretations on the term &amp;ldquo;professional&amp;rdquo; and the best response on the question was the following:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If someone calls themselves a professional, I expect them to be able to help me in a confident and pleasant manor with the knowledge required to complete the task in hand.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;behaviour&#34;&gt;Behaviour&lt;/h3&gt;

&lt;p&gt;Now, stay with me on this&amp;hellip;&lt;/p&gt;

&lt;p&gt;With the description previously stated of what a professional is, I would go as far as saying that this does not give us the right to go telling people that you are a &amp;ldquo;professional developer&amp;rdquo; just on the basis that you get paid for you mental skill. I know, who am I to tell you what you can and can not tell people, but please, keep reading.&lt;/p&gt;

&lt;p&gt;Until recently, I considered a &amp;ldquo;professional&amp;rdquo; to suggest someone was a well presented person who was well regarded in their team and / or industry.&lt;/p&gt;

&lt;p&gt;Previous discussions about what a professional is with both friends and work colleges rendered the realisation that anyone can be a professional in their line of work (providing it was mental based).&lt;/p&gt;

&lt;p&gt;But I still don&amp;rsquo;t feel that this is the case. Just because I build glorified web pages in PHP with HTML, CSS and JavaScript and any other tool does not mean I can reply with &amp;ldquo;I am a professional web developer&amp;rdquo; when asked what my line of work is?&lt;/p&gt;

&lt;p&gt;Or does it?&lt;/p&gt;

&lt;h3 id=&#34;context-elitism-and-its-effects&#34;&gt;Context: Elitism and its effects&amp;hellip;&lt;/h3&gt;

&lt;p&gt;My first role as a junior was great, but I quickly learnt about elitism and its effects. The manager and what I would have considered my line manager were great at what they did. There were two other members of the team that were great at what they did. The four of them helped me a lot as a junior. They spoke to me on a level that helped me learn, see why things were done certain ways and why other ways were bad.&lt;/p&gt;

&lt;p&gt;There were however two others in the team that I did not get on with. Not for the lack of trying, but one person (person a) seemed to have a problem with me from day one, the other person (person b) found that he could pick my code apart and laugh about it with person a. This knocked my confidence and made me start to doubt myself whilst I aspired to be a developer. After a while, it started to affect me personally (not that I noticed, but my wife did).&lt;/p&gt;

&lt;p&gt;So, I decided to look around for a new job. This was my worst mistake and best mistake so far. Worst, because the guy was terrible to work for (yeah I know everyone hates there bosses, but two weeks after my wife falling pregnant after eight months of trying he turned round and informed me he was looking into taking me to Russia for three months to get his big idea pushed forward by outsourcing it) and the role was not what was advertised. Best; it helped me choose what path I wanted. It pushed me to read up on more stuff, allowed me to try learning &lt;a href=&#34;https://symfony.com&#34;&gt;Symfony2&lt;/a&gt; with no other developers to help me and so which helped me land my third job.&lt;/p&gt;

&lt;p&gt;The third job was great, it was close to home and felt like I was in a proper team again. I didn&amp;rsquo;t feel like a junior. The things I learnt off the guy who I sat next to were great. He introduced me into Domain Driven Design, good OOP practices, good general practices and so on. He started the ball rolling to get me to where I am today, and for that I owe him a lot. However, the reason for leaving was once again due to a lack of professionalism from team members. I started to feel like it was becoming personal again. I want to say this is an age thing, but it seems it is an issue with a persons attitude and self importance. Again, the wife noticed a change in me, as did I this time round and decided to speak to my manager. I could not fault him for what he tried to do, but I had left it to long and the damage was already done. So, back to job searching.&lt;/p&gt;

&lt;p&gt;In the past however many years of being a developer and starting the quest to become a professional developer I have learnt a fair bit. I am not talking about the technical parts but the meaning of professionalism. I have been lucky that all but one, I have managed to secure a job for all that I have applied for. This is not to be confused with arrogance, far from it, it is a realisation that I can not be coming across as a bad person and that I have the relevant skill sets and working attitude.&lt;/p&gt;

&lt;h3 id=&#34;ok-stop-rambling-what-is-a-professional-developer&#34;&gt;Ok, stop rambling. What is a professional developer?&lt;/h3&gt;

&lt;p&gt;I think there is more to being a &amp;ldquo;professional&amp;rdquo; developer than just being paid for what you do. You need the experience, knowledge and the attitude.&lt;/p&gt;

&lt;p&gt;To act in a professional manner, one must treat others with the same level of respect as they require to be treated with.&lt;/p&gt;

&lt;p&gt;A professional can be a junior developer, developer, senior developer, manager, project manager, product manager or what ever other title there is, but must act in a way that they be treated or treat others the same; like a human. People get things wrong, make mistakes, suggest ideas not fully thought out or ideas about something they do not have a full understanding of, but this does not give rights to take the piss, show the other person up in front of others or even patronise/embarrass them in front of others.&lt;/p&gt;

&lt;p&gt;Someone who treats people like they are assets to the team. Someone who allows others to teach them. Someone who pushes others comfort zones and allows others to push their comfort zones. Doesn&amp;rsquo;t look at someone else&amp;rsquo;s code and sniggers, or shows it to someone like a funny cat picture. Leaves arrogance and twat like traits on the other side of the office door and lets people know that if they have a problem, that they can talk to them or ask for help.&lt;/p&gt;

&lt;p&gt;One of the biggest traits I enjoy having is a mentor like approach. Am I the best developer, no. In every role I have had, I have treated the end user as a VIP as they are potentially using what I am building, so why treat every user like they are stupid and know nothing? They will know more as they use it every day, they know the business process. I have treated team mates with the up most respect and listened and learned from them. If I think I have a different approach that might work (note that I did not say better) I will put the suggestion forward and maybe work towards a solution that works best for the team or the business.&lt;/p&gt;

&lt;p&gt;Being a professional is not just about knowledge for the trade, it is also about awareness of your teams mental health. In most cases, we are at work more than we are with our loved ones. People have issues at home you may not be aware of; and even though I believe in leaving your personal problems at the door, this is not always possible. People go through breakups, divorce, child custody battles, money problems, confidence problems, mental health issues and so on. So think about that the next time you laugh at someone in your team, or take the piss that they spell something wrong, do a task in an odd or over the top way.&lt;/p&gt;

&lt;p&gt;A professional is getting off the childish playground and standing up to people as well as treating others with respect and acceptable behaviour, asking how your team mate next to you is doing, recognising when someone is having a bad day and asking if they need help. If they are the same sex as you, don&amp;rsquo;t belittle them, if they are the opposite sex, don&amp;rsquo;t make inappropriate comments, and yes I am [mainly] on about the comments that are shitty and chauvinistic.&lt;/p&gt;

&lt;p&gt;Above all, create an atmosphere that people in your team can enjoy and people outside of your team want to visit for help about something, or just a chat.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Coming of age as a PHP developer</title>
      <link>http://futurepixels.co.uk/posts/coming-of-age-as-a-php-developer/</link>
      <pubDate>Sun, 11 Jan 2015 10:00:00 +0000</pubDate>
      
      <guid>http://futurepixels.co.uk/posts/coming-of-age-as-a-php-developer/</guid>
      <description>

&lt;p&gt;Back in 2009, I was fortunate to find an advert in the paper for a junior PHP developer. I had been using PHP for around a year at this point. I had not been to University or collage to learn any programming, it was all self taught. I applied and was a successful candidate and worked there for just over a year and a half.&lt;/p&gt;

&lt;h3 id=&#34;me-a-junior-cool&#34;&gt;Me, a junior? Cool!&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;I had only really been a hobby developer in my spare time.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Within my first role I was part of a team where we managed an internal application for the business. It was your usual set up, a change team, development team, a person who tested the changes and so on. Back then though I was still learning PHP and MySQL. I had only really been a hobby developer in my spare time. This role was going to allow me to understand PHP and development ethics; or so I thought&amp;hellip;&lt;/p&gt;

&lt;p&gt;My first job was a brilliant introduction into the world of application development and I owe a lot to my two seniors. However I felt like I was not learning an awful lot, and as time went on, I was fixing issues that I was not 100% confident with and was working on things I was not familiar with and was asking questions to the team a lot which knocked my confidence as a person and made me question if I was in the right career due to certain members of the team as they were holding back key information and not actually helping me like my seniors were.&lt;/p&gt;

&lt;h3 id=&#34;my-first-move-within-my-developer-career&#34;&gt;My first move within my developer career&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Exiting times, I had found my next step in web development; I could make my stamp as a developer!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Around the time of my second Christmas at the company, I found an opportunity at another place. This was to create a business web application. Exciting times, I had found my next step in web development; I could make my stamp as a developer!&lt;/p&gt;

&lt;p&gt;This, unfortunately was not the case. The role was not what was advertised and nothing was ever set in stone in terms of time frames. There was no structure to the project and I was not able to fully learn about the business which hindered any development as well as being pulled from the project to work on Wordpress and Typo CMS which I had no idea of how it worked nor did I have the time to learn it.&lt;/p&gt;

&lt;p&gt;I lasted around 3 months. My shortest ever job in my working lifetime so far.&lt;/p&gt;

&lt;h3 id=&#34;a-sensible-choice&#34;&gt;A sensible choice.&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;2014 was the year I started to become a &lt;em&gt;professional&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;My third job in two years. Not the best thing on your resumé, but I had my reasons. This time I searched around and researched the business I was applying for.&lt;/p&gt;

&lt;p&gt;I was successful in the application and started the following week.&lt;/p&gt;

&lt;p&gt;My first year here seemed good, I was involved in a fair few projects which was great; or so I thought. I yet again learned more about myself. Within a year into my position, I found I was trying to fit in with the team which was effecting my performance and judgement for what I was getting paid for; developing the business, it&amp;rsquo;s applications and tools.&lt;/p&gt;

&lt;p&gt;I had a discussion with the other developer I worked closely with, I explained that I didn&amp;rsquo;t feel I was where I wanted to be and explained my concerns. I asked him how he manages his time and creates estimations. Over the Christmas break I started to work on my time management and wrote an article, &lt;a href=&#34;http://futurepixels.co.uk/back-to-basics/Self-Managment&#34;&gt;self management&lt;/a&gt;, about what I had learnt. I then started to apply this in my job.&lt;/p&gt;

&lt;p&gt;2014 was the year I started to become a &lt;em&gt;professional&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Throughout the year, I started to learn a lot about what it was to be &lt;em&gt;professional&lt;/em&gt;, learning about testing (only &lt;a href=&#34;https://phpunit.de/&#34;&gt;phpunit testing&lt;/a&gt; at this point), design patterns, &lt;a href=&#34;http://www.php-fig.org/&#34;&gt;coding standards&lt;/a&gt;, working as a team member and become a &lt;a href=&#34;http://www.amazon.co.uk/The-Clean-Coder-Professional-Programmers/dp/0137081073&#34;&gt;clean coder&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This was all thanks to the guy I worked with, my senior. He was the person who introduced me to PHP Unit testing, got me to read &amp;lsquo;The Clean Coder&amp;rsquo; by &lt;a href=&#34;https://twitter.com/unclebob&#34;&gt;Uncle Bob&lt;/a&gt; and also introduced me to Domain Driven Design. All these new found things I had started to learn that year has made me who I am today.&lt;/p&gt;

&lt;p&gt;Just before Christmas 2014 I moved job again due to not being happy with the team and unfortunately certain issues snowballed, with partly myself to blame for by not addressing them fully and in a quicker time frame.&lt;/p&gt;

&lt;p&gt;My time here was a time spent learning a lot about my career path, professionalism and myself. For that I thank my manager and my senior developer for helping me become a better developer.&lt;/p&gt;

&lt;h3 id=&#34;from-junior-to-now&#34;&gt;From junior to now&lt;/h3&gt;

&lt;p&gt;Since 2009 I have managed to move from a hobby coder with basic HTML, CSS, PHP and MySQL knowledge to being comfortable to look at other programming languages, design patterns and read books which have all gave me a greater understanding about my role.&lt;/p&gt;

&lt;p&gt;If you are just starting out, starting [or are in] a junior role, at university or have been in the profession for x number of years; I suggest reading &lt;a href=&#34;http://php-books.com&#34;&gt;(PHP Books)&lt;/a&gt;, following people on &lt;a href=&#34;https://twitter.com&#34;&gt;Twitter&lt;/a&gt; and getting yourself on &lt;a href=&#34;https://github.com&#34;&gt;GitHub&lt;/a&gt; as a start.&lt;/p&gt;

&lt;p&gt;Whether you know the language you want to use or are currently developing in, look at online resources, talk to people involved in the community, sign up to mailing lists and don&amp;rsquo;t listen to others because you think they are always right, but because you can learn from them. Even some of the most influential people out there are not always right, and the best ones don&amp;rsquo;t protest to be either, but you will learn something from it.&lt;/p&gt;

&lt;p&gt;Get your head around time frames and the tracking of time, it is so easy to get distracted when you enjoy learning and doing cool things. Talk to your team and seniors, from issues with coding to issues with team members.&lt;/p&gt;

&lt;p&gt;That place that you are working in is where you spend around 8.5 hours of your day with people you don&amp;rsquo;t really know and may or may not like, so make sure you are happy there and let your team/manager know if there is a change or there are any issues that need addressing. This will affect you as a person, as a professional and will cause the business you are working for to suffer.&lt;/p&gt;

&lt;p&gt;Work on projects of your own outside of work, even if it is a simple ToDo app, or your own twitter clone. Work on it, learn how to structure your code, how to name your classes and methods, how to separate logic and how to create that well thought out database schema. This allows you to make errors and learn from them. Push it all up on GitHub.com and you can share it or easily tweet someone about the issue you are having with a reference to the code. You can also learn how to write them informative commit messages instead of &lt;code&gt;Added buildPage() function&lt;/code&gt; which tells you nothing significant from a git log.&lt;/p&gt;

&lt;p&gt;Above all, to be a professional in my opinion is to enjoy what you are doing, think about what you are going to write and how the end user is going to interpret what you have artistically designed and created. With no care taken or lack of attention to detail then your product, feature, refactor and whatever else will show not just in your code base but represent you as a developer.&lt;/p&gt;

&lt;p&gt;These are all things I have taken from my own findings, I may have the wrong view or thoughts on some sections but it is my interpretation of it all.&lt;/p&gt;

&lt;p&gt;When starting out, don&amp;rsquo;t just become a bug monkey. Prove yourself, ask questions and above all enjoy what you do, the language(s) you use and be part of the community, these will be massive pay off&amp;rsquo;s in more ways then one and quicker than you might think.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Self management</title>
      <link>http://futurepixels.co.uk/posts/self-management/</link>
      <pubDate>Tue, 28 Jan 2014 10:00:00 +0000</pubDate>
      
      <guid>http://futurepixels.co.uk/posts/self-management/</guid>
      <description>

&lt;h1 id=&#34;self-management&#34;&gt;Self management&lt;/h1&gt;

&lt;h4 id=&#34;why-i-have-written-this-post&#34;&gt;Why I have written this post&lt;/h4&gt;

&lt;p&gt;Since moving from a hobby developer with the most basic of HTML knowledge since school, I have set targets on improvement of my knowledge within programming. Although my knowledge has improved to a certain degree, along with my workflow, my self management however has got no better. Sure, you can have all the tools you need and within the 4 years (at the time of writing this) of my commercial experience, I think I have only just found the tools that suit me best and I am still learning new tools.&lt;/p&gt;

&lt;h4 id=&#34;bad-with-time-keeping&#34;&gt;Bad with time keeping&lt;/h4&gt;

&lt;p&gt;Your workflow and tool set (in my opinion) come hand in hand, in that both should integrate well. That said, my biggest failure since working within the development industry is my time management. It&amp;rsquo;s something that has been my downfall for a good few years (no seriously, ask my wife&amp;hellip;).&lt;/p&gt;

&lt;h4 id=&#34;wanting-to-improve-myself-as-a-developer&#34;&gt;Wanting to improve myself as a developer&lt;/h4&gt;

&lt;p&gt;This is something I need to change, to improve as a developer, and the way I learn is to try to write about it. I am going to write a few pieces by going back to basics to see if I have failed or as always can improve myself in certain areas throughout this blog.&lt;/p&gt;

&lt;h3 id=&#34;why-time-management-is-important&#34;&gt;Why time management is important&lt;/h3&gt;

&lt;p&gt;It is easy to tell someone that you will take &amp;lsquo;x&amp;rsquo; amount of minutes/hours/days to do something. But it really needs context against the given task. With this, I mean it is better to break down the task into bite size chunks or sections. This way the broken down task will reveal the amount of work needed to be taken for the given task.&lt;/p&gt;

&lt;p&gt;An example of this would be if someone asks me to set up their AV system I would normally say 15-20 minutes. However, it would take longer. If I had broken down the task it would look more like this:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Unboxing of system -&amp;gt; 10 mins&lt;/li&gt;
&lt;li&gt;Re-organising of the current set up -&amp;gt; 20 mins&lt;/li&gt;
&lt;li&gt;Placement of speakers -&amp;gt; 8 mins&lt;/li&gt;
&lt;li&gt;Cutting wires to length -&amp;gt; 6 mins&lt;/li&gt;
&lt;li&gt;Connecting AV Amp -&amp;gt; 15 mins&lt;/li&gt;
&lt;li&gt;Assigning inputs/outputs -&amp;gt; 25 mins&lt;/li&gt;
&lt;li&gt;Testing of set up -&amp;gt; 20 mins&lt;/li&gt;
&lt;li&gt;Configure full system -&amp;gt; 25 mins&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I failed, and this was because I guessed an amount of time without thinking about what is actually involved. My 15-20 minutes was actually 2 hours and 9 minutes, that is an astonishing 1 hour and 49 minutes under or an under estimation by 84%!&lt;/p&gt;

&lt;p&gt;How to break down time&lt;/p&gt;

&lt;p&gt;Test example&lt;/p&gt;

&lt;p&gt;Now, the following example is not related to development as I wanted to give an idea of how to break something down into sections. This allowed me to use common day to day tasks as an example for me to get my head around.&lt;/p&gt;

&lt;p&gt;With my first so called &amp;lsquo;Project&amp;rsquo; to test I wanted to estimate on (as boring as it sounds), cleaning the house. I know, but [almost] everyone does it. Besides, before I looked into the concept of time and how long things actually take I put about 15 minutes away of my time to cleaning a bathroom which made this a perfect test.&lt;/p&gt;

&lt;p&gt;Lets split my cleaning tasks into sub-projects:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hoovering&lt;/li&gt;
&lt;li&gt;Bathroom&lt;/li&gt;
&lt;li&gt;Bedroom 1&lt;/li&gt;
&lt;li&gt;Bedroom 2&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then, for each sub-project I split it into tasks along with their estimations.&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;Task&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Project&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Est&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Logged Time&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Stairs&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Hoovering&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0h07&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0h04&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Landing&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Hoovering&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0h04&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0h08&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Bedroom 2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Hoovering&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0h06&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0h02&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Bedroom 1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Hoovering&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0h06&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0h02&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Total&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0h38 [total (0h23) + 15 mins&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0h16&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Bath&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Bathroom&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0h04&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0h13&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Sink&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Bathroom&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0h12&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0h18&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Mirror&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Bathroom&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0h03&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0h01&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;General&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Bathroom&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0h06&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0h04&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Total&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0h22 [total (0h12) + 10 mins]&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0h05&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;General&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Bedroom 2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0h22&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0h05&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Total&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0h22 [total (0h22) + 10 mins]&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0h05&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;General&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Bedroom 1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0h26&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0h07&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Total&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0h26 [total (0h26) + 10 mins]&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0h07&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Overall Total&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2h12&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1h06&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;For the above tasks, all I have done is taken the total of each sub-project and added half for each. Think of it as a buffer to catch other unexpected things to be done or things that can crop up whilst doing something.&lt;/p&gt;

&lt;p&gt;In my test scenario I have added the extra half by factoring in that an extra 10 and 15 minutes, which I consider a fair, if a little generous amount of time for what I am doing.&lt;/p&gt;

&lt;p&gt;Whilst I was cleaning the bathroom I managed to create one spillage and I received a phone call. This added time on 2 separate tasks which at the time I did not factor into my time estimations.&lt;/p&gt;

&lt;p&gt;In this case, although I over estimated on my times I managed to complete within (very) good time. I had completed all tasks within half of the time. Now, in one respect it is bad that I have over estimated, but then if I had organised to do something after I would not have disappointed anyone; including myself. Already, it is becoming apparent that I am able to hit time targets which is already a big positive.&lt;/p&gt;

&lt;h3 id=&#34;development-example&#34;&gt;Development example&lt;/h3&gt;

&lt;p&gt;If I now apply what I have just learnt into a working development example, in theory I should be able to manage my time better by breaking the task down into chunks and estimate per chunk.&lt;/p&gt;

&lt;p&gt;So, in the example I am working on a project which uses the Symfony 2 framework and I am given a specification for creating a staff profile page which requires the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A set of pages (Show|Edit)&lt;/li&gt;
&lt;li&gt;Ability to add a profile image&lt;/li&gt;
&lt;li&gt;New profile specific fields&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So, on first glance the task is to create a profile page with current data but add a few fields and an image uploader. Estimate 4-6 hours and let your (project) manager know and get on with it. However, I would not be to hasty to start. You will need to research how a profile of the user is currently built up. For instance, you could have the entities &amp;lsquo;Staff&amp;rsquo;, &amp;lsquo;StaffRole&amp;rsquo;, &amp;lsquo;StaffPrivilage&amp;rsquo; currently created and working in the production environment. You may need to add the ability to add contact numbers and addresses which would be brand new entities which will then need relationships for both (and create the database tables/columns and the migration files if you manually manage the database).&lt;/p&gt;

&lt;p&gt;Once broken down, it should look something like this:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;Task&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Project&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Sub-Project&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Est&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Taken&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Read and understand the spec&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Awesome App&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Feature: New awesome profile screen/details&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;01h00&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Create / Amend the table(s) and research the relationships if needed&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Awesome App&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Feature: New awesome profile screen/details&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;00h40&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Create / Amend entities&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Awesome App&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Feature: New awesome profile screen/details&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;01h10&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Create / Amend controller and actions&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Awesome App&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Feature: New awesome profile screen/details&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;01h45&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Create / Amend templates&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Awesome App&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Feature: New awesome profile screen/details&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;01h10&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Create Migration File&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Awesome App&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Feature: New awesome profile screen/details&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;00h30&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Create and action tests&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Awesome App&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Feature: New awesome profile screen/details&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;04h00&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Code review&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Awesome App&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Feature: New awesome profile screen/details&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;01h30&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;User test/demo/review&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Awesome App&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Feature: New awesome profile screen/details&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;03h00&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Create Feature Documentation&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Awesome App&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Feature: New awesome profile screen/details&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;04h00&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Total&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;47h00&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;You will notice I have been generous on time estimation as previously learnt both you, and the business will benefit from this. This allows us to factor in extra time for possible issues. For instance, a migration file should only take 15 minutes at the most as this is an end of feature task so I would copy create/update/delete statements from the database and paste into the file. If there are command line actions, they should take seconds to create as I should have already noted down within our task notes, so a copy and paste will be sufficient. That should not take 30 minutes, but giving the extra time will allow for problems/ interruptions.&lt;/p&gt;

&lt;p&gt;So, I have say 7 hours in a working day. The total for the tasks are 18 hours and 45 minutes which relates to 2 full days, 4 hours and 45 minutes. In this case, I would add an extra 4 days. The reason for this is important; the person who has requested the feature will need to see it as you will want feedback from them when showing the feature. This allows for changes to be requested at the point of user testing.&lt;/p&gt;

&lt;p&gt;If changes were wanted like wanting a border added to a table and the wording changed on a label or they have noticed that I have not added certain fields as required or even that the layout is wrong (which I believe should be discussed either at the time of the specification creation or just after), we have factored in time to make the amendments without going over the estimated time.&lt;/p&gt;

&lt;p&gt;However, if they feedback that we are not collecting enough profile data even though we have read and understood the specification at the start, I would strongly suggest the following: submit a feature request to allow for amendments.&lt;/p&gt;

&lt;p&gt;In my personal experience, being helpful and accommodating to the person who requested the feature/change is great for them but not for you as a developer for the following reasons:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You &lt;strong&gt;will&lt;/strong&gt; go over your estimated time and take longer on the task.&lt;/li&gt;
&lt;li&gt;You have designed and created the code as per the current specification and it may cause headaches and unneeded stress to your workload&lt;/li&gt;
&lt;li&gt;You will look inefficient and unprofessional to your (project) manager&lt;/li&gt;
&lt;li&gt;Above all, you will allow all users to make additions to the feature/change requests they submit and sometimes deviate from the task in hand by asking &amp;ldquo;if you could just change this on that part whilst you do this&amp;rdquo;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As strict as it sounds, if you are asked anything outside of the project, always get them to request it as a feature/change request. Unless it is no more than a 5 minute task, for example; they want a column adding, you know you already return the data to the view and it is a matter of adding a table column.&lt;/p&gt;

&lt;p&gt;This is why the extra time has been factored in, but my rule of thumb is that if it requires me to create new functionality within the application it will take a further 15(plus) minutes to create and test which for me is a no no.&lt;/p&gt;

&lt;p&gt;As you put the above into practise, your users will start to improve on their submission of specifications by being clearer with what they are asking and stop submitting incomplete specifications.&lt;/p&gt;

&lt;p&gt;Apart from the obvious create/read/update and delete tasks, you will notice the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Code Review: Always go over your code with another developer in your team before pushing the changes as there are always more than one way of coding. (I have found these most benificial within my current role)&lt;/li&gt;
&lt;li&gt;Create/Action Tests: Depending on how your team work, you may do Controller/DBUnit/Browser or framework specific tests, if this is the case always allow time for these and plenty of it.&lt;/li&gt;
&lt;li&gt;Document the feature/change: This is a good practise to get into as you will help the future you when you need to fix or change the codebase for the feature and anyone can read the docs and understand the feature to allow them to add their own changes and fix bugs.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With the above information, I would also like to point out to allow for time to get back into your code after interruptions. If you are working on a development project and it is something that requires the majority of your concentration then you will want to factor in enough time to allow you to get your head back in the code which can often take up to 20 minutes depending on what your code is doing.&lt;/p&gt;

&lt;p&gt;If I was in the middle of writing a service which had a complicated amount of business logic then I should factor in time for toilet/drink breaks, code breaks and interruptions. Although this may sound daft when reading, breaks are important when working with screens and a fresh mind will work more efficiently.&lt;/p&gt;

&lt;p&gt;If I think on a day to day basis, I could get up to 6 interruptions on a busy day. I would then look at the project, which for this example is estimated at 3 days. With the previous knowledge I could factor in 2 hours to the project each day, which in total will add 6 hours. You also need to take into consideration the project deadline and common sense. I personally would only add 3 hours and 30 minutes to the overall project in this case.&lt;/p&gt;

&lt;p&gt;One more thing I would add when working on projects, note down things that happen in the day, it is something I have only just started to do. The advantage of this, whether you are working in a business or self employed is that you can review why things have taken so long. For instance, if a server went down for several hours which you had to talk to your support team, then log the calls either against the project or better still create a new task as an issue and log your time against it. At the end of the week, you can then see why you did not meet a deadline, bill your client accordingly or just see where you could have improved workflows, processes or structure of your support team?&lt;/p&gt;

&lt;h3 id=&#34;summary&#34;&gt;Summary&lt;/h3&gt;

&lt;p&gt;So, to go over the above in bullet points:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Break down into sections or bite size chunks&lt;/li&gt;
&lt;li&gt;Estimate the time for each chunk and add extra time on the sections overall time&lt;/li&gt;
&lt;li&gt;Factor in extra time to allow for interruptions and potential issues&lt;/li&gt;
&lt;li&gt;If there is an issue (related or not), record it either in the notes or as its own task&lt;/li&gt;
&lt;li&gt;Prioritise tasks&lt;/li&gt;
&lt;li&gt;Stay focused&lt;/li&gt;
&lt;li&gt;Always be generous with your time&lt;/li&gt;
&lt;li&gt;Take breaks. I have wasted hours at times trying to code something. After a walk or long break, I have found the issue immediatly and sort the problem&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I hope this has helped. If you think anything could be improved or found better ways of dealing with any of the above, please contact me on &lt;a href=&#34;https://twitter.com/NigelGreenway&#34; target=&#34;_blank&#34;&gt;Twitter&lt;/a&gt; as I always like to hear other methods or practices.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>An introduction to using Git</title>
      <link>http://futurepixels.co.uk/posts/an-introduction-to-using-git/</link>
      <pubDate>Sat, 05 Oct 2013 10:00:00 +0000</pubDate>
      
      <guid>http://futurepixels.co.uk/posts/an-introduction-to-using-git/</guid>
      <description>

&lt;h1 id=&#34;setting-up-git&#34;&gt;Setting up Git&lt;/h1&gt;

&lt;h2 id=&#34;installing-git&#34;&gt;Installing Git&lt;/h2&gt;

&lt;p&gt;There are few ways to install &lt;a href=&#34;http://git-scm.com/&#34;&gt;Git&lt;/a&gt; on a mac (I will eventually add guides on Windows and Linux).&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Install &lt;a href=&#34;https://itunes.apple.com/gb/app/xcode/id497799835?mt=12&#34;&gt;Xcode&lt;/a&gt; (and install the command line tools for an added bonus)
&lt;em&gt;Simply install via the App Store App.&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Install via &lt;a href=&#34;http://brew.sh/&#34;&gt;brew&lt;/a&gt;
&lt;em&gt;Providing you have &lt;a href=&#34;http://brew.sh/&#34;&gt;brew&lt;/a&gt; installed (installation instructions on the site), then; once installed run &lt;code&gt;[sudo] brew install git&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Download direct from &lt;a href=&#34;http://git-scm.com/download/mac&#34;&gt;git-scm.com&lt;/a&gt;
&lt;em&gt;As it say&amp;rsquo;s on the tin, download and install.&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once you have found your way of installing &lt;a href=&#34;http://git-scm.com/&#34;&gt;Git&lt;/a&gt;, do a simple test buy running &lt;code&gt;git status&lt;/code&gt; which should then return:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;fatal: Not a git repository (or any of the parent directories): .git
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;setting-up-git-1&#34;&gt;Setting up Git&lt;/h2&gt;

&lt;p&gt;Setting up &lt;a href=&#34;http://git-scm.com/&#34;&gt;Git&lt;/a&gt; in it&amp;rsquo;s simplist form is adding your user credentials:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git config --global user.name &amp;quot;Joe Smith&amp;quot;
git config --global user.email &amp;quot;joe@smith.com&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can also also change/add configs within your .gitconfig file which on a Mac can be found in your home directory &lt;code&gt;~/.gitconfig&lt;/code&gt;. For an example, your can &lt;a href=&#34;https://github.com/smilinmonki666/dotfiles/blob/master/.gitconfig&#34;&gt;view&lt;/a&gt; mine for extra basic configurable options.&lt;/p&gt;

&lt;h3 id=&#34;usefull-tools&#34;&gt;Usefull tools&lt;/h3&gt;

&lt;h4 id=&#34;command-line&#34;&gt;Command line&lt;/h4&gt;

&lt;p&gt;When using &lt;a href=&#34;http://git-scm.com/&#34;&gt;Git&lt;/a&gt;, terminal can be more useful then you think. The best addition to this is to install &lt;a href=&#34;http://cheat.errtheblog.com/s/git&#34;&gt;cheat sheet&lt;/a&gt; via &lt;a href=&#34;http://rubygems.org&#34;&gt;RubyGems&lt;/a&gt;. This can be installed by running &lt;code&gt;[sudo] gem install cheat&lt;/code&gt;. Once installed you simply run &lt;code&gt;cheat git&lt;/code&gt; and it displays the document in vi mode. In this, I mean you use arrow up/down to navigate.&lt;/p&gt;

&lt;p&gt;A quick guide will be displayed for you to view for those times of need.&lt;/p&gt;

&lt;p&gt;You can &lt;a href=&#34;http://try.github.io/levels/1/challenges/1&#34;&gt;learn&lt;/a&gt; Git within your browser on &lt;a href=&#34;http://github.com&#34;&gt;Github.com&lt;/a&gt; which will give you an introduction to &lt;a href=&#34;http://git-scm.com/&#34;&gt;Git&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&#34;sourcetree&#34;&gt;Sourcetree&lt;/h4&gt;

&lt;p&gt;All functionality is as easy to use in terminal as it is in any GUI. However, there are times when the GUI gives you a better understanding of how certain methods and processes work.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.sourcetreeapp.com/&#34;&gt;SourceTree&lt;/a&gt; is available for Windows, Linux and from the &lt;a href=&#34;https://itunes.apple.com/gb/app/sourcetree-git-hg/id411678673?mt=12&#34;&gt;App Store&lt;/a&gt; for the Mac.&lt;/p&gt;

&lt;p&gt;It is something I have used for a while to get my head around &lt;a href=&#34;http://git-scm.com/&#34;&gt;Git&lt;/a&gt; as it allowed me to picture the commands better.&lt;/p&gt;

&lt;h3 id=&#34;clone-or-create-a-repository&#34;&gt;Clone or create a repository&lt;/h3&gt;

&lt;h4 id=&#34;creating-a-repository&#34;&gt;Creating a repository&lt;/h4&gt;

&lt;p&gt;Creating a repository is as simple as &lt;code&gt;git init&lt;/code&gt; within the desired directory. From there you would create files and &lt;a href=&#34;#section:add&#34;&gt;Add&lt;/a&gt; then &lt;a href=&#34;#section:commit&#34;&gt;Commit&lt;/a&gt; to your repository.&lt;/p&gt;

&lt;p&gt;An example of this would be:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git init
touch README.md
git add README.md
git commit -m &amp;quot;Add Readme file for instructions&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Once created, I would suggest creating your &lt;a href=&#34;#section:branches&#34;&gt;branches&lt;/a&gt;. That way you will be able to start getting into a workflow and used to switching between branches.&lt;/p&gt;

&lt;h4 id=&#34;cloning-a-repository&#34;&gt;Cloning a repository&lt;/h4&gt;

&lt;p&gt;To clone a repository (Assuming you are using &lt;a href=&#34;http://github.com&#34;&gt;Github.com&lt;/a&gt;) run the following in directory you want the project to be stored:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone git@github.com:{username}/{repository}.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;When using &lt;a href=&#34;http://github.com&#34;&gt;Github.com&lt;/a&gt; as your hosting for your repository, I would suggest following this &lt;a href=&#34;https://help.github.com/articles/generating-ssh-keys&#34;&gt;guide&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Once you have cloned a repository always work in your own &lt;a href=&#34;#section:branches&#34;&gt;branches&lt;/a&gt; so you don&amp;rsquo;t work in a working repository.&lt;/p&gt;

&lt;h5 id=&#34;sidenote&#34;&gt;Sidenote&lt;/h5&gt;

&lt;p&gt;If your repository has been created locally and is empty, set up the code base if you are using a framework.&lt;/p&gt;

&lt;p&gt;So,for example; if you were to work on a &lt;a href=&#34;https://jekyllrb.com&#34;&gt;jekyll&lt;/a&gt; project you would then run in your desired directory &lt;code&gt;jekyll new my-awesome-site&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Then you would &lt;a href=&#34;#section:commit&#34;&gt;Commit&lt;/a&gt; before working on the project so you can view the history of file or even revert to that point if needed.&lt;/p&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd ~/my/project/path
git init
touch README.md
git add README.md
git commit -m &amp;quot;Add Readme file for instructions&amp;quot;
git checkout -b dev
jekyll new my-awesome-site
git add *
git commit -m &amp;quot;Add initial code base of jekyll&amp;quot;
git push
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;basic-functionality&#34;&gt;Basic functionality&lt;/h3&gt;

&lt;h4 id=&#34;git-branches&#34;&gt;Git branches&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;http://git-scm.com/&#34;&gt;Git&lt;/a&gt; branches are a way to create features on top of the code base without messing with the actual base of the project.&lt;/p&gt;

&lt;p&gt;When working with &lt;a href=&#34;#section:branches&#34;&gt;branches&lt;/a&gt; I personaly use the following as default:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;master &amp;ndash;or&amp;ndash; prod&lt;/li&gt;
&lt;li&gt;acceptance &amp;ndash;or&amp;ndash; uat&lt;/li&gt;
&lt;li&gt;testing &amp;ndash;or&amp;ndash; test&lt;/li&gt;
&lt;li&gt;development &amp;ndash;or&amp;ndash; dev&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These will be the branches in which you merge into when dev for your dev server, then test for your testing server followed by &lt;abbr title=&#34;User Acceptence Testing&#34;&gt;UAT&lt;/abbr&gt; and then into your master branch for release.&lt;/p&gt;

&lt;h4 id=&#34;git-pull&#34;&gt;Git pull&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;git pull&lt;/code&gt; will update your current repository to match that of the remote repository. In this, I mean it will &lt;code&gt;git fetch&lt;/code&gt; and then &lt;code&gt;git merge&lt;/code&gt; the remote changes into your local copy of the repository. This is fine if you are wanting to update your local copy.&lt;/p&gt;

&lt;p&gt;A good example of this would be if you have finished your recent changes to &amp;lsquo;my-great-new-feature&amp;rsquo; and you want to create a new [branch][] called &amp;lsquo;even-better-feature&amp;rsquo;. You would simply &lt;code&gt;git checkout dev&lt;/code&gt; (or your main working branch) and then &lt;code&gt;git pull&lt;/code&gt;. You can then &lt;code&gt;git checkout -b even-better-feature&lt;/code&gt; and rock on with your new feature code.&lt;/p&gt;

&lt;p&gt;Do not use this if you want to [fetch][] the changes from remote to local without running the risk of merging remote files into local files you have already changed.&lt;/p&gt;

&lt;h4 id=&#34;git-fetch&#34;&gt;Git fetch&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;git fetch&lt;/code&gt; is the safer way of managing your repository when working with a &lt;abbr title=&#34;Term used when the repository has modified, deleted or added files&#34;&gt;dirty&lt;/abbr&gt; repository. For example, you are half way through a modification which will could possibly be affected by a change made by another team member, without running the risk of changing anyfiles you have worked on, you would run &lt;code&gt;git fetch&lt;/code&gt; on your &lt;abbr title=&#34;Term used when the repository has modified, deleted or added files&#34;&gt;dirty&lt;/abbr&gt; repository knowing you are safe from any unwanted merges.&lt;/p&gt;

&lt;h4 id=&#34;branch-management&#34;&gt;Branch management&lt;/h4&gt;

&lt;p&gt;Say we want a new feature or a bug fix, instead of working directly on the &lt;code&gt;master&lt;/code&gt; branch of the project we create a new branch like so:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git checkout dev
git pull
git branch &amp;lt;branch-name&amp;gt;
git checkout &amp;lt;branch-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;or we can shorthand this by typing:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git checkout dev
git pull
git checkout -b &amp;lt;branch-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now we have our branch we can make changes to the code base.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;* Notice the &lt;code&gt;git checkout &amp;lt;dev&amp;gt;&lt;/code&gt; and &lt;code&gt;git pull&lt;/code&gt; at the start of the code block. This is a must as you want to ensure you get the latest code within the &lt;code&gt;dev&lt;/code&gt; branch so you are working with up-to-date code for your bug fix or feature build.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&#34;git-add&#34;&gt;Git add&lt;/h4&gt;

&lt;p&gt;When you have made changes by changing current code or adding files, we need to add it to the staging area when we are happy with our local testing. We can do this by adding all files in one go:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git add *
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;This is great to add all files in one go, but this is only relative to the directory you are in.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To add specific filenames, we can do the following, again depending where you are on the project tree, you may need to add the full path or &lt;code&gt;cd&lt;/code&gt; to the root folder.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git add &amp;lt;filename&amp;gt; &amp;lt;filename&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Although considered bad practice to make multiple changes to a file or files for different issues or feature enhancements, you can find your self creating a feature by adding modifications that are related but not as one.&lt;/p&gt;

&lt;p&gt;For example; you create a feature that includes a config file and certain functions need to access the config file. However, you have created the &lt;code&gt;config.json&lt;/code&gt; and modified 3 functions to access this config, tested it works and are ready to commit. If we add them all in one go and commit all in the staging area, it will be a pain and can cause difficulty to revert to a certain revision. As in this instance, reverting to this commit on production due to a bug can cause these functions to possibly break the site completely. So, instead of &lt;code&gt;git add *&lt;/code&gt; we look at the code by adding in &lt;a href=&#34;#section:hunks&#34;&gt;hunks&lt;/a&gt; to further review the code before committing.&lt;/p&gt;

&lt;h4 id=&#34;git-commit&#34;&gt;Git commit&lt;/h4&gt;

&lt;p&gt;Once your files are added, we can now commit those changes by doing:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git commit -m &amp;quot;&amp;lt;your-message-message-here&amp;gt;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For ease of reading commits by another developer, I&amp;rsquo;ve always said to write you commit message like so:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git commit -m &amp;quot;Capitalized, short (50 chars or less) summary

More detailed explanatory text, if necessary.  Wrap it to about 72 characters or so.  In some contexts, the first line is treated as the subject of an email and the rest of the text as the body.  The blank line separating the summary from the body is critical (unless you omit the body entirely); tools like rebase can get confused if you run the two together.

Write your commit message in the imperative: &#39;Fix bug&#39; and not &#39;Fixed bug&#39; or &#39;Fixes bug&#39;.  This convention matches up with commit messages generated by commands like git merge and git revert.`

Further paragraphs come after blank lines.
 - Bullet points are okay, too
 - Typically a hyphen or asterisk is used for the bullet, preceded by a single space, with blank lines in between, but conventions vary here
 - Use a hanging indent&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This way you will be able to look back at bug and feature commits and know exactly what has happend.&lt;/p&gt;

&lt;h4 id=&#34;git-merge&#34;&gt;Git merge&lt;/h4&gt;

&lt;p&gt;Merging in its simplistic view is grabbing your amended code and merging into your working branch. For example, to merge your feature code into the working &lt;code&gt;dev&lt;/code&gt; branch, your would:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git checkout dev
git pull
git merge &amp;lt;branch&amp;gt; --no-ff --no-commit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The options are&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&amp;ndash;no-ff &lt;em&gt;:No Fast Forward. Combines all commits into one&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&amp;ndash;no-commit &lt;em&gt;:Merge but do not auto commit, great for merge conflicts and further tweaks&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Instead of writing a load to explain the merge conflicts, read the post on &lt;a href=&#34;http://gitready.com/beginner/2009/01/25/branching-and-merging.html&#34;&gt;gitready merge&lt;/a&gt; for a better explanation.&lt;/p&gt;

&lt;h4 id=&#34;git-hunks&#34;&gt;Git hunks&lt;/h4&gt;

&lt;p&gt;The following &lt;code&gt;git diff&lt;/code&gt; gives the changes that have been made:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;git diff index.php
diff --git a/index.php b/index.php
index 07464de..26f5539 100644
--- a/index.php
+++ b/index.php
@@ -1,7 +1,7 @@
&amp;lt;h1&amp;gt;Hello World&amp;lt;/h1&amp;gt;


-&amp;lt;h3&amp;gt;Git is just lovely to use?&amp;lt;/h3&amp;gt;
+&amp;lt;h3&amp;gt;Git is suc a great tool to use?&amp;lt;/h3&amp;gt;



@@ -9,4 +9,4 @@



-&amp;lt;footer&amp;gt;This is a foot&amp;lt;/footer&amp;gt;
\ No newline at end of file
+&amp;lt;footer&amp;gt;This is a footer&amp;lt;/footer&amp;gt;
\ No newline at end of file
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As per above, there are several changes in the file, but we only want to add the second section of changes in this commit:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git add -p &amp;lt;filename&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You will then be asked what you would like to do with this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;git add -p index.php
diff --git a/index.php b/index.php
index 07464de..26f5539 100644
--- a/index.php
+++ b/index.php
@@ -1,7 +1,7 @@
1&amp;gt;Hello World&amp;lt;/h1&amp;gt;

-&amp;lt;h3&amp;gt;Git is just lovely to use?&amp;lt;/h3&amp;gt;
+&amp;lt;h3&amp;gt;Git is such a great tool to use?&amp;lt;/h3&amp;gt;



Stage this hunk [y,n,q,a,d,/,j,J,g,e,?]? n
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We select &lt;code&gt;n&lt;/code&gt; and the next section is shown:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;@@ -9,4 +9,4 @@



-&amp;lt;footer&amp;gt;This is a foot&amp;lt;/footer&amp;gt;
\ No newline at end of file
+&amp;lt;footer&amp;gt;This is a footer&amp;lt;/footer&amp;gt;
\ No newline at end of file
Stage this hunk [y,n,q,a,d,/,K,g,e,?]? y
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We then select &lt;code&gt;y&lt;/code&gt; and this section of the file changes will be shown in our staging area ready to commit.&lt;/p&gt;

&lt;p&gt;When we do a &lt;code&gt;git status&lt;/code&gt; you will see the file will be in both the &lt;code&gt;Changes to be commited:&lt;/code&gt; and &lt;code&gt;Changes not staged for commit:&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git status
# On branch master
# Changes to be committed:
#   (use &amp;quot;git reset HEAD &amp;lt;file&amp;gt;...&amp;quot; to unstage)
#
#   modified:   index.php
#
# Changes not staged for commit:
#   (use &amp;quot;git add &amp;lt;file&amp;gt;...&amp;quot; to update what will be committed)
#   (use &amp;quot;git checkout -- &amp;lt;file&amp;gt;...&amp;quot; to discard changes in working directory)
#
#   modified:   index.php
#
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We can now commit the following changes only for the index file.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;-&amp;lt;footer&amp;gt;This is a foot&amp;lt;/footer&amp;gt;
+&amp;lt;footer&amp;gt;This is a footer&amp;lt;/footer&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;git-push&#34;&gt;Git push&lt;/h4&gt;

&lt;p&gt;When you have made you changes and are ready to test on another server or make it live, you would then push all commited changes back to the repository like so:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git push
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;extra-activities&#34;&gt;Extra Activities&lt;/h3&gt;

&lt;p&gt;You can learn &lt;a href=&#34;http://git-scm.com/&#34;&gt;git&lt;/a&gt; outside of, or before your project with &lt;a href=&#34;http://github.com&#34;&gt;Github&amp;rsquo;s&lt;/a&gt; &lt;a href=&#34;http://try.github.io/&#34;&gt;try github&lt;/a&gt;. Alternatively, you can create an empty folder and &lt;code&gt;git init&lt;/code&gt; within the folder and play around without effecting any other git repo on your machine&amp;hellip;&lt;/p&gt;

&lt;h3 id=&#34;more-reading&#34;&gt;More Reading&lt;/h3&gt;

&lt;p&gt;The following is a list of further reading and more detailed information of each section I have covered plus a lot more&amp;hellip;&lt;/p&gt;

&lt;p&gt;Enjoy!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://gitready.com&#34;&gt;gitready.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://gitready.com&#34;&gt;git-scm.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://csswizardry.com/2012/12/my-git-workflow-for-inuit-css/&#34;&gt;A Git workflow&lt;/a&gt; This guy is also awesome for his CSS framework &lt;a href=&#34;http://inuitcss.com&#34;&gt;inuit.css&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Welcome to futurepixels.co.uk</title>
      <link>http://futurepixels.co.uk/posts/welcome-to-futurepixels.co.uk/</link>
      <pubDate>Tue, 26 Feb 2013 10:00:00 +0000</pubDate>
      
      <guid>http://futurepixels.co.uk/posts/welcome-to-futurepixels.co.uk/</guid>
      <description>&lt;p&gt;So, this is just a quick hello and to say thank&amp;rsquo;s for visiting. I am currently in between writting some other articles and tutorials at the moment along with at the end of buying a house, so this may take some time as I also need to decorate the house&amp;hellip; all good fun.&lt;/p&gt;

&lt;p&gt;So, a thank you for visiting the site and I hope you come here every now and then, and if you would like to drop me a &lt;a href=&#34;NigelGreenway&#34; target=&#34;_new&#34;&gt;tweet&lt;/a&gt;, you are most welcome. I will be sure to reply to you.&lt;/p&gt;

&lt;p&gt;So, until my next article&amp;hellip; have fun.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>